#version 460

layout(local_size_x = 32, local_size_y = 32) in;

#include "particles3_comp_base.h"

layout(std430, binding=1) readonly buffer PotentialBuffer {
    float Psi[];
};

layout(std430, binding=2) writeonly buffer StrengthBuffer {
    vec4 E[];
};

void main() {
    uint i = gl_GlobalInvocationID.x;
    uint k = gl_GlobalInvocationID.y;

    for (int j = 0; j < nn; j++) {
        uint ii = off(i,k,j);
        E[ii].x = -(Psi[poff(i,k,j+1)]-Psi[poff(i,k,j-1)])/2.0/h;
        E[ii].y = -(Psi[poff(i,k+1,j)]-Psi[poff(i,k-1,j)])/2.0/h;
        E[ii].z = -(Psi[poff(i+1,k,j)]-Psi[poff(i-1,k,j)])/2.0/h;
        E[ii].w = 0; // unused
    }

    barrier();
}
